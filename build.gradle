apply plugin: 'java'
defaultTasks 'dist'

//settings common to all projects
allprojects {
    apply plugin: 'java'
	
	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
    
	sourceCompatibility = 6
	
	repositories {
		mavenCentral()
	}
	
	//additional configurations for compile classpaths
	configurations {
		compileOnly
		testCompileOnly { extendsFrom compileOnly }
	}
	
	dependencies {
		testCompile group: 'junit', name: 'junit', version: '4.+'
	}

	sourceSets {
		main {
			java { srcDir 'src' }
			resources { srcDir 'src' }
			compileClasspath += configurations.compileOnly
		}
		test {
			java { srcDir 'test' }
			resources { srcDir 'test' }
			compileClasspath += configurations.compileOnly + configurations.testCompileOnly
		}
	}

	jar {
		from 'license.txt'
		manifest.attributes 'Created-By': 'Xenoage Software'
	}
}

//distribution in multiple jars
task distDir(type:Copy) {
	dependsOn subprojects*.build
	from subprojects*.jar.outputs.files
	into "build/dist/split"
}

//distribution in single jar
task singleJar(type: Jar) {
	dependsOn subprojects*.build
	
	subprojects.each() { subproject ->
		ext.jarDir = "${subproject.name}/build/libs/"
		from (zipTree(ext.jarDir + subproject.name + ".jar")) { exclude 'license.txt' }
		from (zipTree(ext.jarDir + subproject.name + ".jar")) { include 'license.txt' into("licenses/${subproject.name}/") }
	};
	from 'license.txt'
	destinationDir = file("build/dist/onejar")
	archiveName = 'utils.jar'
	manifest.attributes 'Created-By': 'Xenoage Software'
}

//clean JavaDoc directory
task cleanDoc(type: Delete) {
	delete "doc"
}

//create JavaDoc
task createDoc(type: Javadoc, dependsOn: cleanDoc) {
	title = "Xenoage Utils API"
	source = subprojects.collect { it.sourceSets.main.allJava }
    destinationDir = new File(projectDir, 'doc')
	failOnError = false
	configure(options) {
		windowTitle = "Xenoage Utils API"
		author = true
		use = true //create class and package usage pages
	}
}

//main task
task dist {
	dependsOn build, distDir, singleJar
}